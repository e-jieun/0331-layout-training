.root{
  width: 100vw;
  height: 200vh;
  display: flex;
  align-items: flex--end;
}
.container{
  width: inherit;
  height: inherit;
  display: flex;
  flex-direction: column;
}
p{
  color: rgb(48, 48, 48);
}

/* empty */
.container>div:nth-child(1){
  width: inherit;
  height: 10vh;
}
/* container->container */
.container>div:nth-child(2){
  width: inherit;
  height: 70vh;
  display: flex;
  /* Q1. 두 개의 컨테이너를 만들어 겹치는 방법으로 위의 두 플렉스된 header와 scroll을 main 부분과 합쳐서 레이아웃을 구성했습니다!
  혹시 이 방법 외에 한 컨테이너에 header, scroll, main 아이템을 모두 묶을 수 있는 방법이 있는지 궁금합니다! */
  position: absolute;
  top: 10vh;
  z-index: 1;
}
/* header */
.container>div:nth-child(2)>div:nth-child(1){
  width: 90%;
  height: 60%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--color-fff);
  border-radius: 0px 50px 50px 0px;
  /* https://developer.mozilla.org/ko/docs/Web/CSS/box-shadow */
  /* Q2. header의 그림자가 scroll 부분 위로 올라오지 않는 부분을 position: absolute;를 주고 z-index 값을 주면 모양이 틀어져 버려서 어떻게 해결하는 것이 좋을지 궁금합니다! */
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.2);
}
.container>div:nth-child(2)>div:nth-child(1)>ul{
  width: 70%;
  height: 10%;
  display: flex;
  justify-content: flex-end;
  column-gap: 2vw;
  list-style-type: none;
  color: var(--color-c4);
}
.container>div:nth-child(2)>div:nth-child(1)>ul li:nth-child(1){
  color: var(--color-bk);
  font-weight: 600;
}
/* header title con */
.container>div:nth-child(2)>div:nth-child(1)>div:nth-child(2){
  width: 70%;
  height: 10%;
  display: flex;
  align-items: flex-start;
}
.container>div:nth-child(2)>div:nth-child(1)>div:nth-child(2) p{
  font-size: large;
}
/* header title item */
.container>div:nth-child(2)>div:nth-child(1)>div:nth-child(3) {
  width: 70%;
  height: 40%;
  display: flex;
  align-items: flex-start;  
}
/* header title item p */
.container>div:nth-child(2)>div:nth-child(1)>div:nth-child(3) p{
  width: inherit;
}
/* green button con */
.container>div:nth-child(2)>div:nth-child(1)>div:nth-child(4){
  width: 25%;
  height: 15%;
  display: flex;
  justify-content: flex-end;
}
/* green button */
.container>div:nth-child(2)>div:nth-child(1)>div:nth-child(4) div{
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color:rgb(19, 156, 19);
  border-radius: 5px;
  color: var(--color-fff);
}
/* scroll */
.container>div:nth-child(2)>div:nth-child(2){
  width: 10%;
  height: inherit;
  display: flex;
  align-items: flex-end;
}
.container>div:nth-child(2)>div:nth-child(2)>div{
  width: 100%;
  height: 90%;
  background-color: var(--color-gray);
  border-radius: 80px 0px 0px 0px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.container>div:nth-child(2)>div:nth-child(2)>div>div{
  width: 25%;
  height: 70%;
  background-color: var(--color-fff);
  border-radius: 100px;
  display: flex;
  justify-content: center;
}
.container>div:nth-child(2)>div:nth-child(2)>div>div>div{
  width: 90%;
  height: 10%;
  background-color: var(--color-c4);
  border-radius: 100px;
  position: relative;
  top: 1vw;
}
/* main */
.container>div:nth-child(3){
  width: inherit;
  height: 70vh;
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  position: absolute;
  top: 10vh;
}
.container>div:nth-child(3)>div{
  width: 90vw;
  height: 35vh;
  background-color: gray;
  display: flex;
}
.container>div:nth-child(3)>div>div{
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  position: relative;
  top: 3vh;
  overflow: hidden;
}
.container>div:nth-child(3)>div>div>div{
  width: 30%;
}
